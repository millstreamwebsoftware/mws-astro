---
import { convertColorString } from "src/util";
export interface Props {
  action: string;
  name: string;
  form_blocks: any[];
  background_color?: string;
  key?: string;
}

const { action, name, form_blocks, background_color, key } = Astro.props;
const id = (name || "") + "-" + (key || "");

const components: Record<string, any> = {};
const componentImports = import.meta.glob(
  ["/src/components/form/**/*.jsx", "/src/components/form/**/*.astro"],
  {
    eager: true,
  }
);

Object.entries(componentImports).forEach(([path, obj]: [string, any]) => {
  const parts = path
    .replace(/^.*components\//, "")
    .split(".")[0]
    .split("/");
  if (parts.length > 1 && parts[parts.length - 1] === parts[parts.length - 2]) {
    parts.pop();
  }
  const bookshopName = parts.join("/");
  components[bookshopName] = obj.default;
});

const background = convertColorString(background_color);
---

<section style=`--background-color: ${background};` class="form">
  <form method="post" {action} {name} {id}>
    {
      form_blocks.map((block: any, i: number) => {
        const Component = components[block._bookshop_name];
        if (Component) {
          return <Component {...block} key={String(i) + (key || "")} />;
        }
        return (
          <div class="missing-component">
            {`Component ${block._bookshop_name} could not be found!`}
          </div>
        );
      })
    }
    <input type="hidden" name="_gotcha" />
    <input type="submit" value="Submit" />
  </form>
</section>

<style>
  .form form {
    display: flex;
    flex-direction: column;
  }
</style>
