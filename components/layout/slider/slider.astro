---
export interface Props {
  time: number;
  key?: string;
}
const liveEditor = import.meta.env.ENV_BOOKSHOP_LIVE ? true : false;

const { time, key } = Astro.props;
const id = "glide" + "-" + (key || "");

// const autoplay = true;

// {
//         slides.map((slide, i) => {
//           return slide;
//         })
//       }
---

{
  liveEditor ? (
    <h1>Live Editor!</h1>
  ) : (
    <section class="slider">
      <div class="glide" data-glide={id} {id}>
        <div class="glide__track" data-glide-el="track">
          <ul class="glide__slides">
            <li class="glide__slide">0</li>
            <li class="glide__slide">1</li>
            <li class="glide__slide">2</li>
          </ul>
        </div>
        <div class="glide__arrows" data-glide-el="controls">
          <button class="glide__arrow glide__arrow--left" data-glide-dir="<">
            prev
          </button>
          <button class="glide__arrow glide__arrow--right" data-glide-dir=">">
            next
          </button>
        </div>
        <div class="glide__bullets" data-glide-el="controls[nav]">
          <button class="glide__bullet" data-glide-dir="=0" />
          <button class="glide__bullet" data-glide-dir="=1" />
          <button class="glide__bullet" data-glide-dir="=2" />
        </div>
      </div>
    </section>
  )
}

<script>
  import Glide from "@glidejs/glide";

  document.querySelectorAll("div[data-glide]").forEach((e, i) => {
    if (!e) {
      return;
    }

    let id = e.getAttribute("id");

    new Glide(`#${id}`, {
      autoplay: 4000,
      focusAt: "center",
    }).mount();
  });
</script>
