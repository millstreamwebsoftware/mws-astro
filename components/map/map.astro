---
export interface props {
  lat: number;
  lng: number;
  zoom?: number;
  height: number;
  style?: any;
  indent?: boolean;
  key?: string;
}

import preferences from "data/preferences.json";
const { lat, lng, zoom, key, indent } = Astro.props;

const apiKey = preferences.API.google_maps.api_key;
const height = Astro.props.height + "vh";
const mapId = "map-" + key;
---

<section
  class:list={["map", { "no-indent": !indent }]}
  style=`--height: ${height};`
>
  <div
    id={mapId}
    class="map-box"
    data-map={mapId}
    data-lat={lat}
    data-lng={lng}
    data-zoom={zoom}
    data-api-key={apiKey}
  >
  </div>
</section>

<script>
  import { Loader } from "@googlemaps/js-api-loader";

  const apiKey = document
    .querySelector("[data-map][data-api-key]")
    ?.getAttribute("data-api-key");

  if (!apiKey) throw TypeError("Missing Google Maps API Key");

  const loader = new Loader({
    apiKey,
    version: "weekly",
  });

  loader.load().then(async () => {
    const { Map } = (await google.maps.importLibrary(
      "maps"
    )) as google.maps.MapsLibrary;

    document.querySelectorAll("[data-map]").forEach((e, i) => {
      if (!(e instanceof HTMLElement)) return;
      new Map(e, {
        center: {
          lat: Number(e.dataset?.lat),
          lng: Number(e.dataset?.lng),
        },
        zoom: Number(e.dataset?.zoom),
      });
    });
  });
</script>

<style>
  .map-box {
    min-height: 100%;
  }

  section {
    min-height: var(--height);
  }
</style>
