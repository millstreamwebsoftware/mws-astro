---
import { bookshopName } from "@mws-astro/util";

export interface Props {
    contentBlocks: any[];
    "bookshop:live"?: any;
    "data-lightbox"?: string;
}

const { contentBlocks, "data-lightbox": lightbox } = Astro.props;

const components: Record<string, any> = {};
const componentImports = import.meta.glob(
    ["/src/mws-astro/src/components/**/*.astro"],
    {
        eager: true,
    },
);

const componentOverrides = import.meta.glob(["/src/components/**/*.astro"], {
    eager: true,
});

Object.entries(componentImports).forEach(
    ([path, obj]: [string, any]) =>
        (components[bookshopName(path)] = obj.default),
);

Object.entries(componentOverrides).forEach(
    ([path, obj]: [string, any]) =>
        (components[bookshopName(path)] = obj.default),
);
---

<main data-pagefind-body data-lightbox={lightbox}>
    {
        contentBlocks.map((block: any, i: number) => {
            const Component = components[block._bookshop_name];
            if (Component) {
                return (
                    <Component
                        {...block}
                        _blocks={contentBlocks}
                        key={String(i)}
                    />
                );
            }
            const warnstring = `[${Astro.self.name}] Component ${block._bookshop_name} could not be found!`;
            console.warn(warnstring);
            return <div class="missing-component">{warnstring}</div>;
        })
    }
</main>
