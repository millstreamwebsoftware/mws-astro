---
import _preferences from "@data/preferences.json";
const preferences = _preferences as unknown as Preferences;
import Navigation from "./SiteNavigation.astro";

export interface Props {
    id?: string;
    currentPath?: string;
}

const { id, currentPath } = Astro.props;
---

<header
    id="header"
    class:list={{
        pinned: preferences.header.pin_header !== "false",
        contain: preferences.header.pin_header === "contain",
        "mobile-logo": preferences.header.show_logo_mobile ?? false,
    }}
>
    {
        preferences.header.show_logo && (
            <a class="logo" href="/" title="Home">
                <img
                    src={preferences.header.logo_image}
                    alt={`${preferences.general.site_name} Logo`}
                />
            </a>
        )
    }
    {preferences.header.show_navigation && <Navigation {id} {currentPath} />}
</header>

<style>
    header {
        position: absolute;
        left: 0;
        right: 0;
        top: 0;
        display: grid;
        z-index: 8000;
        --text-color: var(--header-color);
        color: rgb(var(--header-color));
        height: var(--header-height);
        background: linear-gradient(
            to bottom,
            rgba(var(--header-background-color)),
            rgba(var(--header-background-color-bottom))
        );

        grid-template-areas: "logo navigation";
        grid-template-rows: 100%;
        grid-template-columns: 1fr auto;

        /* grid-template-areas: "logo secondary" "logo navigation"; */
        /* grid-template-rows: 3.6rem 1fr; */

        /* grid-template-columns: auto 1fr; */
    }

    header.pinned {
        position: fixed;
        left: 0;
        right: 0;
        top: 0;
        padding: 0 calc((100vw - var(--page-max-width)) * 0.5);
    }

    header.pinned.contain {
        /* left: calc((100vw - var(--page-max-width)) * 0.5); */
        top: 0;
        left: unset;
        right: unset;
        width: min(var(--page-max-width), 100vw);
    }

    .logo {
        padding: 10px;
        grid-area: logo;
        width: fit-content;
        min-width: 15rem;
    }

    .logo img {
        object-fit: contain;
        object-position: left;
        width: auto;
        height: var(--header-height);
        max-height: 100%;
        max-width: 100%;
    }
</style>

<style lang="scss" is:global>
    /* header nav {
        grid-area: secondary / secondary / navigation / navigation;
    } */

    header .secondary ul.social {
        padding: 0;
    }

    header .secondary li {
        font-size: var(--text-size-small);
        letter-spacing: 1px;
    }

    .mobile-nav {
        #header.mobile-logo {
            grid-template-areas: "logo";

            .logo {
                width: 100%;

                img {
                    width: 100%;
                    object-position: center;
                }
            }
        }

        #header:not(.mobile-logo) {
            height: 0;

            .logo {
                display: none;
            }
        }

        body:has(> #header:not(.mobile-logo)) {
            --header-height: 0;
        }
    }
</style>
