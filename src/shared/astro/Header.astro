---
import preferences from "@data/preferences.json";
import Navigation from "./SiteNavigation.astro";

export interface Props {
    id?: string;
    currentPath?: string;
}

const { id, currentPath } = Astro.props;

// const headerItems: Record<string, boolean> = {
//     logo: preferences.header.show_logo,
//     navigation: preferences.header.show_navigation,
//     social: preferences.header.show_socials,
// };
// const headerAreas =
//     '"' +
//     Object.keys(headerItems)
//         .filter((k) => headerItems[k])
//         .join(" ") +
//     '"';


// const headerBackgroundColor = convertColorString(
//   preferences.header.background_top_color
// );
// const headerBackgroundColorBottom = convertColorString(
//   preferences.header.background_bottom_color
// );

// +
//     `--header-background-color: ${headerBackgroundColor};` +
//     `--header-background-color-bottom: ${headerBackgroundColorBottom};`
---

<header
    id="header"
    class:list={{
        pinned: preferences.header.pin_header != "false",
        contain: preferences.header.pin_header == "contain",
    }}
>
    {
        preferences.header.show_logo && (
            <a class="logo" href="/" title="Home">
                <img
                    src={preferences.header.logo_image}
                    alt={`${preferences.general.site_name} Logo`}
                />
            </a>
        )
    }
    {preferences.header.show_navigation && <Navigation {id} {currentPath} />}
</header>

<style>
    header {
        position: absolute;
        left: 0;
        right: 0;
        top: 0;
        display: grid;
        z-index: 9999;
        --text-color: var(--header-color);
        color: rgb(var(--header-color));
        height: var(--header-height);
        background: linear-gradient(
            to bottom,
            rgba(var(--header-background-color)),
            rgba(var(--header-background-color-bottom))
        );
 
        grid-template-areas: "logo navigation";
        grid-template-rows: 100%;
        
        /* grid-template-areas: "logo secondary" "logo navigation"; */
        /* grid-template-rows: 3.6rem 1fr; */
        
        /* grid-template-columns: auto 1fr; */
    }

    /* header:has(.secondary) {
        grid-template-areas: "logo secondary" "logo navigation";
        grid-template-rows: 3.6rem 1fr;
    } */

    header.pinned {
        position: fixed;
        left: 0;
        right: 0;
        top: 0;
        /* bottom: calc(100% - var(--header-height)); */
        /* height: var(--header-height); */
    }

    header.pinned.contain {
        left: max(calc((100vw - var(--page-max-width)) * 0.5), 0vw);
        right: max(calc((100vw - var(--page-max-width)) * 0.5), 0vw);
    }

    .logo {
        padding: 10px;
        grid-area: logo;
        width: fit-content;
    }

    .logo img {
        object-fit: contain;
        object-position: left;
        width: auto;
        height: var(--header-height);
        max-height: 100%;
        max-width: 100%;
    }

    @media only screen and (max-width: 768px) {
        .logo {
            display: none;
        }

        header {
            height: 0;
        }

        :root {
            --header-height: 0;
        }
    }
</style>

<style lang="scss" is:global>
    /* header nav {
        grid-area: secondary / secondary / navigation / navigation;
    } */

    header .secondary ul.social {
        padding: 0;
    }

    header .secondary li {
        font-size: var(--text-size-small);
        letter-spacing: 1px;
    }
</style>
