---
import preferences from "@data/preferences.json";
import Navigation from "./SiteNavigation.astro";
import Social from "@components/social/social.astro";
import { bookshopName } from "@mws-astro/util";

export interface Props {
    id?: string;
    currentPath?: string;
    paths?: any[];
}

const { id, currentPath, paths } = Astro.props;

// const headerItems: Record<string, boolean> = {
//     logo: preferences.header.show_logo,
//     navigation: preferences.header.show_navigation,
//     social: preferences.header.show_socials,
// };
// const headerAreas =
//     '"' +
//     Object.keys(headerItems)
//         .filter((k) => headerItems[k])
//         .join(" ") +
//     '"';

const components: Record<string, any> = {};
const componentImports = import.meta.glob(
    ["/src/mws-astro/src/components/**/*.astro"],
    {
        eager: true,
    },
);

const componentOverrides = import.meta.glob(["/src/components/**/*.astro"], {
    eager: true,
});

Object.entries(componentImports).forEach(
    ([path, obj]: [string, any]) =>
        (components[bookshopName(path)] = obj.default),
);

Object.entries(componentOverrides).forEach(
    ([path, obj]: [string, any]) =>
        (components[bookshopName(path)] = obj.default),
);

// const headerBackgroundColor = convertColorString(
//   preferences.header.background_top_color
// );
// const headerBackgroundColorBottom = convertColorString(
//   preferences.header.background_bottom_color
// );

// +
//     `--header-background-color: ${headerBackgroundColor};` +
//     `--header-background-color-bottom: ${headerBackgroundColorBottom};`

// const secondary: any = [{ _bookshop_name: "social" }];

const secondary: any = preferences.header.secondary_navigation || [];
---

<header
    class:list={{
        pinned: preferences.header.pin_header != "false",
        contain: preferences.header.pin_header == "contain",
    }}
>
    {
        preferences.header.show_logo && (
            <a class="logo" href="/" title="Home">
                <img
                    src={preferences.header.logo_image}
                    alt={`${preferences.general.site_name} Logo`}
                />
            </a>
        )
    }
    {
        !!secondary?.length && (
            <ul class="secondary">
                {secondary.map((block: any, i: number) => {
                    const Component = components[block._bookshop_name];
                    if (Component) {
                        return (
                            <li>
                                <Component
                                    {...block}
                                    _blocks={secondary}
                                    key={String(i)}
                                />
                            </li>
                        );
                    }
                    const warnstring = `[${Astro.self.name}] Component ${block._bookshop_name} could not be found!`;
                    console.warn(warnstring);
                    return <div class="missing-component">{warnstring}</div>;
                })}
            </ul>
        )
    }
    {preferences.header.show_navigation && <Navigation {id} {currentPath} />}
    <!-- {preferences.header.show_socials && <Social />} -->
</header>

<style>
    header {
        position: absolute;
        left: 0;
        right: 0;
        top: 0;
        display: grid;
        z-index: 9999;
        --text-color: var(--header-color);
        color: rgb(var(--header-color));
        height: var(--header-height);
        background: linear-gradient(
            to bottom,
            rgba(var(--header-background-color)),
            rgba(var(--header-background-color-bottom))
        );

        padding: 0 calc(var(--indent) * 0.25);

        grid-template-areas: "logo navigation";
        grid-template-rows: 100%;
        grid-template-columns: auto 1fr;
    }

    header:has(.secondary) {
        grid-template-areas: "logo secondary" "logo navigation";
        grid-template-rows: 3.6rem 1fr;
    }

    header.pinned {
        position: fixed;
        left: 0;
        right: 0;
        top: 0;
        /* bottom: calc(100% - var(--header-height)); */
        /* height: var(--header-height); */
    }

    header.pinned.contain {
        left: max(calc((100vw - var(--page-max-width)) * 0.5), 0vw);
        right: max(calc((100vw - var(--page-max-width)) * 0.5), 0vw);
    }

    .logo {
        padding: 10px;
        grid-area: logo;
        width: fit-content;
    }

    .logo img {
        object-fit: contain;
        object-position: left;
        width: auto;
        height: var(--header-height);
        max-height: 100%;
    }

    .secondary {
        display: flex;
        justify-content: flex-end;
        align-items: center;
        grid-area: secondary;
        margin: 0;
        list-style: none;
        padding-right: 2rem;
        gap: 1rem;

        li {
            margin: 0;
        }
    }

    @media only screen and (max-width: 768px) {
        .logo {
            display: none;
        }

        header {
            height: 0;
        }

        :root {
            --header-height: 0;
        }
    }
</style>

<style lang="scss" is:global>
    header nav {
        grid-area: navigation;
    }

    header .secondary ul.social {
        padding: 0;
    }

    header .secondary li {
        font-size: var(--text-size-small);
        letter-spacing: 1px;
    }
</style>
