---
interface Props {
  src: string;
  background?: boolean;
  title?: boolean;
  byline?: boolean;
  autoplay?: boolean;
  muted?: boolean;
  loop?: boolean;
  captions?: boolean;
  controls?: boolean;
}

const {
  src,
  background,
  title,
  byline,
  autoplay,
  muted,
  loop,
  captions,
  controls,
} = Astro.props;

var url;
var embed: string | null = null;

try {
  url = new URL(src);
} catch (e) {
  console.warn(e);
  return;
}

if (url.hostname.endsWith("vimeo.com")) {
  // Vimeo
  url.hostname = "player.vimeo.com";
  url.pathname = url.pathname.replace(/^(\/.*\/)(\d*)$/, "/video/$2");

  if (background) {
    url.searchParams.append("background", "1");
    url.searchParams.append("pip", "0");
  } else {
    url.searchParams.append("title", title ? "1" : "0");
    url.searchParams.append("byline", byline ? "1" : "0");
    url.searchParams.append("muted", muted || autoplay ? "1" : "0");
    url.searchParams.append("autoplay", autoplay ? "1" : "0");
    url.searchParams.append("loop", loop ? "1" : "0");
    if (controls === false) url.searchParams.append("controls", "0");
  }

  url.searchParams.append("dnt", "1");

  embed = url.toString();
} else if (
  url.hostname.endsWith("youtube.com") ||
  url.hostname.endsWith("youtu.be")
) {
  // Youtube
  var vidId: string | null;

  if (url.pathname.startsWith("/watch")) vidId = url.searchParams.get("v");
  else vidId = url.pathname.substring(1);

  if (vidId) {
    // `https://www.youtube.com/embed/${vidId}`
    var embedUrl = new URL(`https://www.youtube-nocookie.com/embed/${vidId}`);

    if (autoplay) embedUrl.searchParams.append("autoplay", "1");
    if (controls === false) embedUrl.searchParams.append("controls", "0");
    if (captions) embedUrl.searchParams.append("cc_load_policy", "1");

    if (loop) {
      embedUrl.searchParams.append("loop", "1");
      embedUrl.searchParams.append("playlist", vidId);
    }

    // Only show channel videos in related videos section
    embedUrl.searchParams.append("rel", "0");

    embed = embedUrl.toString();
  }
}
---

<div class:list={["video-wrapper", { background }]}>
  {embed && <iframe src={embed} allowfullscreen allow="autoplay" />}
</div>
<style lang="scss">
  .video-wrapper.background {
    position: absolute;
    overflow: hidden;

    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    container: video-wrapper / size;

    iframe {
      position: absolute;
      height: max(56.25cqw, 100cqh);
      width: max(177.778cqh, 100cqw);

      left: calc((max(177.778cqh, 100cqw) - 100cqw) * -0.5);
      top: calc((max(56.25cqw, 100cqh) - 100cqh) * -0.5);
    }
  }

  .video-wrapper:not(.background) {
    iframe {
      width: 100%;
      height: auto;
      aspect-ratio: 16/9;
    }
  }
</style>
