---
import { Markdown as RemoteMarkdown } from "astro-remote";
import MarkdownIt from "markdown-it";
import { replaceCmsEmbeds, stripTrailingWhitespace } from "@mws-astro/util";
import Blockquote from "@components/blockquote/blockquote.astro";
import Button from "@components/button/button.astro";
import Icon from "@shared/icon.astro";
import Mailbuild from "@components/mailbuild/mailbuild.astro";
import Facebook from "@components/facebook/facebook.astro";
import Social from "@components/social/social.astro";
import Counter from "@components/counter/counter.astro";

// We need to strip whitespace due to a strange bug which removes a character from the start of a line when there is whitespace before the newline.
const content = await stripTrailingWhitespace(Astro.props.content).then(
  replaceCmsEmbeds
);

var substitutions = {
  blockquote: Blockquote,
  icon: Icon,
  Newsletter: Mailbuild,
  Facebook,
  Social,
  'a[class*="button"]': Button,
  Counter,
};
var md;

// @ts-ignore
if (ENV_BOOKSHOP_LIVE) {
  md = new MarkdownIt({ html: true });
} else {
  // Get site specific custom snippets from src/snippets.ts
  const snippetGlob = import.meta.glob<Record<string, any>>("/src/snippets.ts");

  snippetGlob?.["/src/snippets.ts"]?.()?.then(
    ({ snippets }) => Object.assign(substitutions, snippets),
    (error) => console.log(error)
  );
}
---

{
  md ? (
    <Fragment set:html={md.render(content)} />
  ) : (
    content && (
      <RemoteMarkdown
        {content}
        sanitize={{ allowComponents: true }}
        components={substitutions}
      />
    )
  )
}
