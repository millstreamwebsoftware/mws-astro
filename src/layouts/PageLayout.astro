---
import Page from "@shared/Page.astro";
import type { CollectionEntry, CollectionKey } from "astro:content";
import Layout from "./Layout.astro";

type Props = {
  page: { data: CollectionEntry<CollectionKey>["data"] };
};

const { data: props } = Astro.props.page;

const renderers: Record<string, any> = {};
const rendererImports = import.meta.glob("src/components/**/*.schema.astro", {
  eager: true,
});

Object.entries(rendererImports).forEach(([path, obj]: [string, any]) => {
  let name = path.match(/.*\/(.*?)\.schema\.astro$/)?.[1];
  if (!name) return;
  renderers[name] = obj.default;
});

// var Renderer = Page;

var Renderer;

if (props?._schema && props._schema in renderers) {
  Renderer = renderers[props._schema];
}

if (Renderer === undefined && !("content_blocks" in props)) {
  throw new Error(
    `Tried to output page with unsupported schema: ${props?._schema}`,
  );
}
---

<Layout {...props}>
  {
    Renderer === undefined ? (
      <Page {...props} content_blocks={props.content_blocks} bookshop:live />
    ) : (
      <Renderer
        {...props}
        content_blocks={props.content_blocks}
        bookshop:live
      />
    )
  }
</Layout>
