---
import {
  default as Image,
  type Props as ImageProps,
} from "@shared/Image.astro";
import clsx from "clsx";
// import _preferences from "@data/preferences.json";
// const preferences = _preferences as unknown as Preferences;

export interface Props {
  image: ImageProps["image"];
  src?: string;
  width?: number;
  height?: number;
  alt?: string;
  title?: string;
  description?: string;
  fit?: "contain" | "cover";
  size?: "small" | "medium" | "large";
  align?: "left" | "center" | "right";
  classes?: (string | string[])[];
  class?: string;
}

const {
  alt,
  classes = Astro.props.class,
  title,
  description,
  width,
  height,
  fit = "contain",
  size,
  align = "center",
} = Astro.props;

const image = Astro.props.src ?? Astro.props.image;

const _classes = clsx(classes).split(" ");

const imgAlign = align ?? _classes.find((c) => c === "align-left" || c === "align-center" || c === "align-right")?.substring(6) ?? "center";

// Hint displayed image size to generate more optimal srcset
const imgSize = size ?? _classes.find((c) => c === "small" || c === "medium" || c === "large") ?? "small";
---

<figure
  class:list={[
    "aside",
    `align-${imgAlign}`,
    imgSize
  ]}
  {title}
>
  <Image {image} {alt} {fit} {width} {height} displayWidth={{"small": 0.33, "medium": 0.5, "large": 1}[imgSize]} quality="mid" />
  {description && <figcaption>{description}</figcaption>}
</figure>

<style lang="scss">
  figcaption {
    font-size: var(--text-size-medium);
    color: rgb(var(--text-color));
    margin-top: 0.5em;
  }

  figure,
  figure.small {
    max-width: 33%;
  }

  figure.medium {
    max-width: 50%;
  }

  figure.large {
    max-width: 100%;
  }

  figure {
    &:where(.align-left) {
      margin: 0.5em 4rem 4rem 0;
      float: left;
    }
    &:where(.align-right) {
      margin: 0.5em 0 4rem 4rem;
      float: right;
    }
    &:where(.align-center) {
      position: relative;
      max-width: 100%;
      float: none;
      margin: 3rem 0;
    }
  }

  @media only screen and (max-width: 768px) {
    figure:where(.align-left, .align-right) {
      float: none;
      margin: 3rem 0;
    }

    figure {
      max-width: 100%;
    }
  }
</style>

<style is:global lang="scss">
  figure.aside img {
    max-width: 100%;
    max-height: 30rem;
  }

  figure.aside.small img {
    max-height: 30rem;
  }

  figure.aside.medium img {
    max-height: 40rem;
  }

  figure.aside.large img {
    max-height: 50rem;
  }

  /* Live editor support */
  .cms-editor-active .richtext > .component-wrapper img {
    max-height: 30rem;
    margin: 3rem 0;
    float: none;
    object-fit: contain;

    &:not([align="left"], [align="right"]) {
      width: 100%;
    }

    &[align="left"] {
      margin: 0.5em 4rem 4rem 0;
      float: left;
    }
    &[align="center"] {
      position: relative;
      max-width: 100%;
      float: none;
      margin: 3rem 0;
    }
    &[align="right"] {
      margin: 0.5em 0 4rem 4rem;
      float: right;
    }

    &[size="small"] {
      max-height: 30rem;
    }

    &[size="medium"] {
      max-height: 40rem;
    }

    &[size="large"] {
      max-height: 50rem;
    }
  }
</style>
