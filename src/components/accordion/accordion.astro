---
import Icon from '@shared/icon.astro';

export interface Props {
  title?: string;
}

const {title} = Astro.props;
---

<script>
  // document.addEventListener("DOMContentLoaded", setupAccordion);
  // document.addEventListener("astro:after-swap", setupAccordion);
  setupAccordion();
  
  function setupAccordion() {
    const accordions = document.querySelectorAll<HTMLElement>(".accordion");
    
    if (!accordions) return;
    
    accordions.forEach((accordion) => {
      accordion.addEventListener("click", toggleAccordion);
    });
    
  }
  
  function toggleAccordion(e: Event) {
    if (!e.currentTarget) return;
    
    // Ignore clicks within accordion content
    const target = (e.target as Element);
    if (target.closest(".accordion-heading, .accordion")?.matches(".accordion")) return;
    
    const acccordion = (e.currentTarget as Element);
    const state = acccordion.classList.contains("expanded");
    
    if (!state) acccordion.closest("section")?.querySelectorAll(".accordion").forEach((sibling) => {
      if (sibling !== acccordion)
      sibling.classList.remove("expanded");
    });
    
    acccordion.classList.toggle("expanded");
  }
</script>

<div class="accordion">
    <div class="accordion-heading" tabindex="0">
        <div class="accordion-icon">
            <Icon name="fa6-solid:circle-chevron-down" height="2rem"/>
        </div>
        <div class="accordion-title">
            <h4>{title}</h4>
        </div>
    </div>
    <div class="accordion-content">
        <slot />
    </div>
</div>

<style lang="scss">
    .accordion {
        display: grid;
        grid-template-rows: min-content 0fr;
        transition: grid-template-rows 0.2s;
        margin-bottom: 2rem;
    }
    
    .accordion.expanded, .accordion:has(:focus-visible) {
        grid-template-rows: min-content 1fr;
        
        .accordion-content {
            border-bottom: 1px solid rgb(var(--accordion-rule-color, var(--text-color)));
            padding-top: 1rem;
            padding-bottom: 2rem;
        }
    }
    
    .accordion-content {
        overflow: hidden;
        border-bottom: 1px solid transparent;
        transition: border 0.2s, padding 0.2s;
        
        padding-left: 2rem;
        margin-left: -2rem;
        padding-right: 2rem;
        margin-right: -2rem;
    }

    .accordion-heading {
        display: grid;
        grid-template-areas: "icon title";
        gap: 1rem;
        padding: 1rem 0;
        /* margin-bottom: 1rem;  */
        align-items: center;
        border-bottom: 1px solid rgb(var(--accordion-rule-color, var(--text-color)));
        
        grid-template-columns: 2rem 1fr;
        
        .accordion-icon {
            grid-area: icon;
            color: rgb(var(--heading-color));
        }
        
        .accordion-title {
            grid-area: "title";
        }
    }
    
    .accordion:has(+ .accordion) {
        margin-bottom: 0rem;
    }
</style>

<style is:global lang="scss">
    .accordion-heading .accordion-icon svg {
        transform: rotate(0deg);
        transition: transform 0.2s ease-in-out;
    }

    .accordion.expanded, .accordion:has(:focus-visible) {
        .accordion-heading .accordion-icon svg {
            transform: rotate(-180deg);
        }
    }
</style>
