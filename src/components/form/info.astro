---
// import MarkdownIt from "markdown-it";

import Markdown from '@shared/Markdown.astro';
import Icon from '@shared/icon.astro';

// const md = new MarkdownIt({ html: true });

export interface Props {
  content: string;
  style?: string;
  key?: string;
}

// const htmlContent = md.render(Astro.props.content);

const content = Astro.props.content;

const style = Astro.props.style?.toLowerCase();

const icon = style
  ? {
      "info": "fa6-solid:circle-info",
      "warning": "fa6-solid:triangle-exclamation",
      "error": "fa6-solid:circle-xmark"
    }[style]
  : undefined;

// {Icon && <Icon class="icon" />}
// <Fragment set:html={htmlContent} />
---

<div class:list={["form-info", style, {"has-icon": !!icon}]}>
  <span class="icon-container">{icon && <Icon name={icon} height="2rem"/>}</span>
  <span><Markdown {content}></span>
</div>

<style>
  div {
    position: relative;
    color: var(--text-color);
  }

  span {
    z-index: 1;
  }

  div.form-info.has-icon {
    display: grid;
    grid-template-columns: 2rem 1fr;
    gap: 2rem;
    padding-left: 1rem;
  }

  .icon-container {
    height: 100%;
    display: flex;
    flex-direction: column;
    justify-content: center;
  }

  .form-info.info,
  .form-info.warning,
  .form-info.details,
  .form-info.error {
    padding: 1rem;
    border-radius: var(--border-radius);
    padding-left: 1.5rem;
    border-left: 0.5rem solid rgb(207 207 207);

    background-color: rgb(var(--form-info-color) / 0.3);
    border-color: rgb(var(--form-info-color) / 0.6);
    color: rgb(var(--form-info-color));
  }

  .form-info.info {
    --form-info-color: var(--info-color);
  }

  .form-info.warning {
    --form-info-color: var(--warning-color);
  }

  .form-info.details {
    --form-info-color: var(--details-color);
  }

  .form-info.error {
    --form-info-color: var(--error-color);
    background-color: transparent;
  }

  .form-info.error::after {
    content: "";
    position: absolute;
    opacity: .3;
    z-index: 0;
    inset: 0px;
    border-radius: 0 var(--border-radius) var(--border-radius) 0;

    background: 
      repeating-linear-gradient(
        45deg,
        rgb(var(--form-info-color)),
        rgb(var(--form-info-color)) .5rem, 
        rgb(var(--form-info-color) / 0.5) .5rem, 
        rgb(var(--form-info-color) / 0.5) 1rem
      ), linear-gradient(
        to right, 
        transparent, 
        rgb(var(--form-info-color)) 5rem
      );
  }

</style>
